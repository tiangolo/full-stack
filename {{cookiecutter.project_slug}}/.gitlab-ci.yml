image: tiangolo/docker-with-compose

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

stages:
  - test
  - build
  - deploy

rest-tests:
  stage: test
  script:
    - export $(cat test.env | grep '^[A-Z]' | xargs)
    - docker-compose -f docker-compose.yml -f docker-compose.build.yml -f docker-compose.test.yml config > docker-stack.yml
    - docker-compose -f docker-stack.yml build
    - docker-compose -f docker-stack.yml down -v --remove-orphans # Remove possibly previous broken stacks left hanging after an error
    - docker-compose -f docker-stack.yml up -d
    - sleep 20; # Give some time for the DB and prestart script to finish
    - docker-compose -f docker-stack.yml exec -T backend-rest-tests pytest
    - docker-compose -f docker-stack.yml down -v --remove-orphans
  tags:
   - build
   - test

build-branch:
  stage: build
  script:
    - export $(cat branch.env | grep '^[A-Z]' | xargs)
    - docker-compose -f docker-compose.images.yml -f docker-compose.build.yml config > docker-stack.yml
    - docker-compose -f docker-stack.yml build
    - docker-compose -f docker-stack.yml push
  except:
    - master
    - production
    - tags
  tags:
   - build
   - test

build-stag:
  stage: build
  script:
    - export $(cat branch.env | grep '^[A-Z]' | xargs)
    - docker-compose -f docker-compose.images.yml -f docker-compose.build.yml config > docker-stack.yml
    - docker-compose -f docker-stack.yml build
    - docker-compose -f docker-stack.yml push
  only:
    - master
  tags:
   - build
   - test
    
build-prod:
  stage: build
  script:
    - export $(cat branch.env | grep '^[A-Z]' | xargs)
    - docker-compose -f docker-compose.images.yml -f docker-compose.build.yml config > docker-stack.yml
    - docker-compose -f docker-stack.yml build
    - docker-compose -f docker-stack.yml push
  only:
    - production
  tags:
   - build
   - test

deploy-branch:
  stage: deploy
  script: 
    - export $(cat branch.env | grep '^[A-Z]' | xargs)
    - docker-compose -f docker-compose.yml -f docker-compose.admin.yml -f docker-compose.images.yml -f docker-compose.deploy.yml config > docker-stack.yml
    - docker stack deploy -c docker-stack.yml --with-registry-auth {{cookiecutter.docker_swarm_stack_name_branch}}
  environment:
    name: branch
    url: https://{{cookiecutter.domain_branch}}
  except:
    - master
    - production
    - tags
  tags:
    - swarm
    - branch

deploy-stag:
  stage: deploy
  script: 
    - export $(cat stag.env | grep '^[A-Z]' | xargs)
    - docker-compose -f docker-compose.yml -f docker-compose.admin.yml -f docker-compose.images.yml -f docker-compose.deploy.yml config > docker-stack.yml
    - docker stack deploy -c docker-stack.yml --with-registry-auth {{cookiecutter.docker_swarm_stack_name_staging}}
  environment:
    name: staging
    url: https://{{cookiecutter.domain_staging}}
  only:
    - master
  tags:
    - swarm
    - stag

deploy-prod:
  stage: deploy
  script:
    - export $(cat prod.env | grep '^[A-Z]' | xargs)
    - docker-compose -f docker-compose.yml -f docker-compose.admin.yml -f docker-compose.images.yml -f docker-compose.deploy.yml config > docker-stack.yml
    - docker stack deploy -c docker-stack.yml --with-registry-auth {{cookiecutter.docker_swarm_stack_name_main}}
  environment:
    name: production
    url: https://{{cookiecutter.domain_main}}
  only:
    - production
  tags:
    - swarm
    - prod
